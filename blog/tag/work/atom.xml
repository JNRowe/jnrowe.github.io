<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://jnrowe.github.io/</id>
  <title>JNRowe - Posts tagged work</title>
  <updated>2022-03-11T11:45:59.236784+00:00</updated>
  <link href="https://jnrowe.github.io/"/>
  <link href="https://jnrowe.github.io/blog/tag/work/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.23">ABlog</generator>
  <subtitle>Ramblings of a tired mind</subtitle>
  <entry>
    <id>https://jnrowe.github.io/articles/dropping_gentoo.html</id>
    <title>Dropping Gentoo</title>
    <updated>2014-06-18T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="dropping-gentoo"&gt;

&lt;p&gt;We’ve been using &lt;a class="reference external" href="http://gentoo.org"&gt;Gentoo&lt;/a&gt; for shipped products since June 2005, and as
a development platform since September 2004.  A long time, an incredibly long
time in fact.&lt;/p&gt;
&lt;p&gt;Today our final Gentoo using product shipped, with a single scheduled update
promised in Q3-2015.  It is kind of sad day, but we all knew that day was coming
and it takes only a little inside knowledge to know why.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;A couple of people have rightly pointed out that I was a little harsh in
this document, so I’ve pushed a &lt;span class="xref std std-doc"&gt;followup&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;section id="landscapes-have-changed"&gt;
&lt;h2&gt;Landscapes have changed&lt;/h2&gt;
&lt;p&gt;Back when we started using Gentoo it was clearly the best choice for what we
needed; a easily coercible base on which to construct our Linux devices.  There
actually weren’t a lot of viable choices back then.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://debian.org"&gt;Debian&lt;/a&gt;, which many of us loved, felt like the only mainstream distribution we
could have used.  Unfortunately, it wasn’t available for the arches we needed.
It also didn’t package many of things we used at that point, but to be fair
there were &lt;abbr title="Intent to Package"&gt;ITPs&lt;/abbr&gt; (were they called that back then?)
already floating about for most of them.&lt;/p&gt;
&lt;p&gt;The “from source” options available then would, for all intents and purposes,
have meant taking on the support costs of the entire stack which nobody wanted
to commit to.  As it turns out that burden slowly crept up on us over the next
ten years anyway.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="take-a-left-in-100-metres"&gt;
&lt;h2&gt;Take a left in 100 metres&lt;/h2&gt;
&lt;p&gt;Over the years we regrettably diverged heavily from upstream, almost to the
point that saying we use Gentoo almost feels like a lie.&lt;/p&gt;
&lt;p&gt;Before our first product shipped we had already switched to maintaining the
essential toolchain packages like GCC and glibc ourselves.  I can’t recall the
specific reasons as I didn’t work on them, but I recall agreeing with them.&lt;/p&gt;
&lt;p&gt;At some point we started using a custom package manager, initially just a new
drop-in resolver and eventually a completely independent package manager.
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt; was ferociously buggy in places and also appeared to be moribund, so
it seemed like the correct choice.  We never supported the full range of
features that Gentoo’s &lt;a class="reference external" href="http://wiki.gentoo.org/wiki/Project:PMS"&gt;PMS&lt;/a&gt; now defines, but it made the support surface a lot
nicer.&lt;/p&gt;
&lt;p&gt;There was a point where we seriously considered moving to a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Conary_(package_manager)"&gt;Conary&lt;/a&gt;-based
infrastructure.  It did loads of the cool things we wanted to do and it mostly
fitted our workflow with its “Gentoo done right” feel.  Sadly, it has
a &lt;abbr title="Contributor License Agreement"&gt;CLA&lt;/abbr&gt; which none of us could sign that practically guaranteed we would
eventually be in the same place we were with Gentoo.  May have been
a fortuitous roadblock in the end, as Conary never gained the traction it
once promised(perhaps in part because of that &lt;abbr title="Contributor License Agreement"&gt;CLA&lt;/abbr&gt;?).&lt;/p&gt;
&lt;p&gt;Had we waited another five months, there would have been another open source
package manager for Gentoo we could have easily switched to and hacked on.
There is perhaps a pattern here…&lt;/p&gt;
&lt;/section&gt;
&lt;section id="upstreaming-changes"&gt;
&lt;h2&gt;Upstreaming changes&lt;/h2&gt;
&lt;p&gt;Of course, running a non-standard package manager and a thick layer of custom
packages at the bottom of the stack made contributing changes back upstream very
time consuming.  Many of us tried, but eventually most stopped.&lt;/p&gt;
&lt;p&gt;Anyone who was running Gentoo in the mid-00’s will recall the giant wedge that
got in the way of reporting bugs, and sadly by the time it disappeared many of
us had lost interest.&lt;/p&gt;
&lt;p&gt;If you had ran the gauntlet and lucked out with a bug in front of a developer,
there was a new barrier that many were irked by: lack of attribution.  It never
bothered me, but the number of developers who wouldn’t even reference a bug
report in the ChangeLog was huge.  That taught me a valuable personal lesson,
I always attribute a commit to the reporter even when I’ve significantly mangled
a patch to make it acceptable.&lt;/p&gt;
&lt;p&gt;For a time, to ease the annoyance we used to play a game where we reported real
bugs with patches, but using silly data for &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;emerge&lt;/span&gt; &lt;span class="pre"&gt;--info&lt;/span&gt;&lt;/code&gt;.  It was
definitely fun while it lasted, but it didn’t solve the pain points.  Not
wanting to be associated with the bugs made people use pseudonyms, which also
removed the expectation of attribution too.&lt;/p&gt;
&lt;p&gt;I kept trying to report trivial and cosmetic bugs - ones which didn’t require
a huge upfront investment - for some time, but they’d go unchanged for weeks or
months so I stopped doing that too&lt;/p&gt;
&lt;p&gt;Looking around now there is an automatically generated list of bugs with patches
which we’ve fixed but haven’t upstreamed, and a few random entries from it look
like this:&lt;/p&gt;
&lt;div class="highlight-console notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; wc -l ~/gentoo/to_push/jay.rst
&lt;span class="go"&gt;1157 /home/jay/gentoo/to_push/jay.rst&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; wc -l ~/gentoo/to_push/mattias.rst
&lt;span class="go"&gt;2104 /home/jay/gentoo/to_push/mattias.rst&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; wc -l ~/gentoo/to_push/chrisp.rst
&lt;span class="go"&gt;873 /home/jay/gentoo/to_push/chrisp.rst&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That genuinely upsets me greatly.  The amount of potential duplicated effort
they represent is enormous, and I don’t even want to attempt to put a figure on
it.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="supporting-upstream"&gt;
&lt;h2&gt;Supporting upstream&lt;/h2&gt;
&lt;p&gt;We’re entirely to blame.  We always planned on supporting upstream in whichever
way we could.  That fell down for instances beyond sending patches too.&lt;/p&gt;
&lt;p&gt;The story that comes to mind is from a chance encounter at LinuxWorld back in
2005.  We had managed to gather a whole heap of really cool hardware to donate
to projects who were exhibiting on the day we attended, and it felt nice handing
out toys as a little “thank you” to the projects we depended on.&lt;/p&gt;
&lt;p&gt;It wasn’t all roses though.  My manager went off to offer some ARM-based devices
to the Gentoo guys who were there, but was met with “tremendous rudeness” from
the person manning their desk at the time.  In hindsight people could have
predicted a similar outcome, and it was just an unlucky moment for him to walk
up.  That soured his enthusiasm no end, and it was the last time we managed to
score bags of toys to randomly give away to developers on any project.&lt;/p&gt;
&lt;p&gt;If you were one of the people who received a Nokia tablet or ZipIt in the Hand
&amp;amp; Flower that evening, you now know the reason and perhaps you can even guess
who to thank.&lt;/p&gt;
&lt;p&gt;A year or so later I watched a similar scenario play out at the Gentoo UK
conference with a potential sponsor and the same developer.  Evening beers were
met with other people telling stories about that same person, which was a shame
as it probably cost them a few good cash and infrastructure sponsors that day
alone.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="support-costs"&gt;
&lt;h2&gt;Support costs&lt;/h2&gt;
&lt;p&gt;Over time we’ve come to support most of the tree that people refer to as
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gentoo-x86&lt;/span&gt;&lt;/code&gt; ourselves.  The toolchain changes we needed at the time
necessitated supporting a few packages further up the stack.  Our desire to trim
the tree of a few categories that were problematic, meant replacing a variety of
packages with then unavailable dependencies.&lt;/p&gt;
&lt;p&gt;And there were many other examples too…&lt;/p&gt;
&lt;section id="matchbox"&gt;
&lt;h3&gt;matchbox&lt;/h3&gt;
&lt;p&gt;We packaged &lt;a class="reference internal" href="#matchbox"&gt;matchbox&lt;/a&gt; and its associated packages a long, long time before they
hit the official tree.  It was the first real pain point we had with packages
appearing in the tree after we had already been using them.&lt;/p&gt;
&lt;p&gt;When they did eventually hit the tree we had to carry workarounds for years.  At
some point we stopped trying and just scrubbed the ebuilds that got in the way.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="python"&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;p&gt;The state of the Python packaging a few years ago made us take the jump to
replace or remove anything that packaged a Python module.  Initially very time
consuming, but it saved an enormous amount of grief.&lt;/p&gt;
&lt;p&gt;I suspect we could move closer to upstream at this point, but the point is now
moot.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="systemd"&gt;
&lt;h3&gt;systemd&lt;/h3&gt;
&lt;p&gt;We switched to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;systemd&lt;/span&gt;&lt;/code&gt; before the package was in upstream’s tree, and we
have had to keep supporting it to this day because of insurmountable packaging
differences.&lt;/p&gt;
&lt;p&gt;In a few places that means taking on packages with a reverse dependency too,
where differences create issues.  And it clearly means taking on any package
that depends on &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;openrc&lt;/span&gt;&lt;/code&gt; or Gentoo’s &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;baselayout&lt;/span&gt;&lt;/code&gt; package.  Those packages
are becoming fewer and fewer by the day though, so that would have become
a non-issue.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="x-org"&gt;
&lt;h3&gt;X.org&lt;/h3&gt;
&lt;p&gt;We had been packaging x.org’s packages to work around some implementation
differences with upstream since the dawn of modular X.  Mostly just to do with
how dependencies were specified to start with, but they’re no longer even
remotely similar.&lt;/p&gt;
&lt;p&gt;Luckily there isn’t a great deal of churn in the packages we care about for the
most part, so it never caused a huge time sink.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="the-end-is-nigh"&gt;
&lt;h2&gt;The end is nigh&lt;/h2&gt;
&lt;p&gt;At some point it began to feel like we were maintaining our own distribution
from end-to-end, and that wasn’t fun.  It also wasn’t what any of us needed to
do, and the time it was taking measurably ate in to &lt;em&gt;real&lt;/em&gt; project time.&lt;/p&gt;
&lt;p&gt;The decision to start weaning ourselves off of Gentoo was made back in the
summer of last year, and it has finally started to come in to effect.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-times-they-are-a-changing"&gt;
&lt;h2&gt;The Times They Are a-Changing&lt;/h2&gt;
&lt;p&gt;There are plenty of good alternatives out there now for building systems that
need to run on a variety of architectures.  Some binary, some source-based and
a few hybrid approaches.&lt;/p&gt;
&lt;p&gt;The project I’m working on right now is using Debian &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;testing&lt;/span&gt;&lt;/code&gt;, and it appears
to be working out fine.  Some things still annoy me, like the time it takes to
patch and recreate a package.  It is a trivial thing with Gentoo, but requires
far too much work with Debian.  Perhaps we’ll improve the workflow enough as we
develop more experience.&lt;/p&gt;
&lt;p&gt;We’ve also hit a good moment to use Debian because a whole heap of work has gone
in to making Debian easier to bootstrap, and it definitely shows.  When I find
out who has done all the magic to make that happen I’ll scribble down a note to
owe them some beers.&lt;/p&gt;
&lt;p&gt;We’re also lucky in that we employ two Debian developers, one is practically
a funded full-time Debian developer.  They’re incredibly knowledgeable and it
makes working with Debian a lot easier, so thanks guys!&lt;/p&gt;
&lt;p&gt;All told, things look good.  We’re still playing with some alternatives and as
yet no concrete decisions have been made, but I feel like we’re on the right
track for the next ten years.&lt;/p&gt;
&lt;p&gt;So long Gentoo, and thanks for all fish!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/dropping_gentoo.html" rel="alternate"/>
    <summary>We’ve been using Gentoo for shipped products since June 2005, and as
a development platform since September 2004.  A long time, an incredibly long
time in fact.</summary>
    <category term="gentoo" label="gentoo"/>
    <category term="work" label="work"/>
    <category term="linux" label="linux"/>
    <published>2014-06-18T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/dropping_gentoo_reflex.html</id>
    <title>Dropping Gentoo reflex</title>
    <updated>2014-06-29T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="dropping-gentoo-reflex"&gt;

&lt;p&gt;After hitting the publish button on &lt;a class="reference internal" href="../../articles/dropping_gentoo.html#dropping_gentoo"&gt;&lt;span class="std std-ref"&gt;Dropping Gentoo&lt;/span&gt;&lt;/a&gt; a few friends
commented that I was either unnecessarily harsh about Gentoo or we wasted an
enormous amount of time on it.  It definitely was the former, and I feel
a touch ashamed for implying the latter.&lt;/p&gt;
&lt;p&gt;I was writing my thoughts in the “project obituary” form that I’m used to, and
that is entirely about spotting the downsides to make sure they don’t reoccur.
And with that in mind I &lt;em&gt;was&lt;/em&gt; being incredibly unfair to Gentoo, both the
project and by extension the people working on it.&lt;/p&gt;
&lt;p&gt;There were many, many good points about Gentoo and I’ll nod towards a few now.&lt;/p&gt;
&lt;section id="speed"&gt;
&lt;h2&gt;Speed&lt;/h2&gt;
&lt;p&gt;No, no.  Not the “Oh my god, my KDEs are so fast” that many people fairly
associate with Gentoo users.  I’m talking about the basic package handling
tasks.&lt;/p&gt;
&lt;p&gt;There are very few other distributions that can match Gentoo when it comes to
the speed of editing a package.  Or, for that matter, the speed of installation
if you share binary packages.&lt;/p&gt;
&lt;p&gt;Almost the first thing you notice when switching to Debian or Fedora as a heavy
binary package user on Gentoo is just how slow package installation and removal
is.  Binary package installation on Gentoo feels on par with a distribution
like Slackware, and what passes for package management there is just choosing
the right argument to &lt;strong class="command"&gt;tar&lt;/strong&gt;’s &lt;a class="reference internal" href="../../articles/dropping_gentoo_reflex.html#cmdoption-tar-C"&gt;&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; option&lt;a class="footnote-reference brackets" href="#id2" id="id1"&gt;*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Where Gentoo really excels though is in the speed of creating new packages or
editing existing packages.&lt;/p&gt;
&lt;p&gt;Lets take a look at an example.  Say, for example, that you just found out that
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;flask-dashed&lt;/span&gt;&lt;/code&gt;’s  &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ebuild&lt;/span&gt;&lt;/code&gt; mistakenly installs a &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;/usr/README&lt;/span&gt;&lt;/code&gt; file.
We we can fix the problem with the following simple change and a call to
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;repoman&lt;/span&gt; &lt;span class="pre"&gt;manifest&lt;/span&gt;&lt;/code&gt;, the rest takes care of itself.&lt;/p&gt;
&lt;div class="highlight-diff notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git i/flask-dashed-0.1b_p2.ebuild w/flask-dashed-0.1b_p2.ebuild&lt;/span&gt;
&lt;span class="gh"&gt;index dd64877a387e..cf3e3cbf272b 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- i/flask-dashed-0.1b_p2.ebuild&lt;/span&gt;
&lt;span class="gi"&gt;+++ w/flask-dashed-0.1b_p2.ebuild&lt;/span&gt;
&lt;span class="gu"&gt;@@ -29,5 +29,6 @@ S=&amp;quot;${WORKDIR}/${MY_P}&amp;quot;&lt;/span&gt;

 src_prepare() {
        distutils-r1_src_prepare
&lt;span class="gi"&gt;+       sed -i /data_files/d setup.py || die &amp;quot;sed failed&amp;quot;&lt;/span&gt;
        rm -rf &amp;quot;${S}/tests&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Of course, you should fix the package properly and send the fix upstream but
this is just to prove a point.  Calling &lt;strong class="command"&gt;die&lt;/strong&gt; with &lt;strong class="command"&gt;sed&lt;/strong&gt;
there isn’t recommended and is practically pointless, but it is the style
upstream.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I have to mention a small downside here however, because very few people seem to
test &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt;’s binary package support you’ll occasionally have to do some
leg work to fix problems.  This normally arises when you have an &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;eclass&lt;/span&gt;&lt;/code&gt;
change that needs to ripple through, or when a library breaks compatibility and
its &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ebuild&lt;/span&gt;&lt;/code&gt; hasn’t been bumped properly.&lt;/p&gt;
&lt;p&gt;Almost every time that happens you can fix it with a quick loop in your shell
though.  A couple of such problems and solutions that I found in my shell
history can be seen below.&lt;/p&gt;
&lt;div class="highlight-zsh notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# When you were stuck with packages that used python-distutils-ng, and you&lt;/span&gt;
&lt;span class="c1"&gt;# needed to scrub packages because you changed Python version&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; p in &lt;span class="k"&gt;$(&lt;/span&gt;portageq pkgdir&lt;span class="k"&gt;)&lt;/span&gt;/*-*/*.tbz2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    qtbz2 -xO &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; qxpak -xO - &lt;span class="si"&gt;${${&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/.tbz2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.ebuild &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s1"&gt;&amp;#39;SUPPORT_PYTHON_ABIS&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c1"&gt;# When you were using packages that used python’s “-r1” eclasses and all&lt;/span&gt;
&lt;span class="c1"&gt;# you could see is a flood of blockages in your update output&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; p in &lt;span class="k"&gt;$(&lt;/span&gt;portageq pkgdir&lt;span class="k"&gt;)&lt;/span&gt;/*-*/*.tbz2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    qtbz2 -xO &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; qxpak -xO - RDEPEND &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;quot;dev-python/python-exec&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="documentation"&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The excellent &lt;a class="reference external" href="http://devmanual.gentoo.org/"&gt;devmanual&lt;/a&gt; and the incredible &lt;a class="reference external" href="http://wiki.gentoo.org/wiki/Project:PMS"&gt;Package Manager Specification&lt;/a&gt;
made life so much easier.  The devmanual was both short enough to be used as
quick reference and complete enough that you could learn most of what you’d need
to know from it.  The unfortunately named &lt;abbr title="Package Manager Specification"&gt;PMS&lt;/abbr&gt; acted as the reference that
finally allowed us to switch from away from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt; completely at the
office.&lt;/p&gt;
&lt;p&gt;The &lt;abbr title="Package Manager Specification"&gt;PMS&lt;/abbr&gt; documented much of the nastiness that &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt; suffers from, and
made life in general a whole lot nicer when you were chasing bugs deep down the
rabbit hole.  And, let us be honest here it also stopped a little of the
fluidity that plagued &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;Some people argue that it acts as unnecessary stop motion but those people must
be forgetting what happened when behaviour changed randomly between &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;portage&lt;/span&gt;&lt;/code&gt;
versions.  &lt;abbr title="Package Manager Specification"&gt;PMS&lt;/abbr&gt;, and the EAPI process, also brought some much needed design
and stability to newer features.&lt;/p&gt;
&lt;p&gt;All Gentoo users owe Ciaran McCreesh a few beers for all the hard work he put in
to those documents, especially in the early days.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-personal-touch"&gt;
&lt;h2&gt;The personal touch&lt;/h2&gt;
&lt;p&gt;On a personal note I’ve met some awesome people over the years as a result of
using Gentoo.  Many of them at the old Gentoo UK conferences, which were always
fun.  More recently at LoFu’s annual summit which seems to have taken Gentoo
UK’s place with practically everyone you saw at Gentoo UK(minus the students),
and oddly about the same Gentoo to non-Gentoo ratio of talks too.&lt;/p&gt;
&lt;p&gt;Two excellent people on our current team were recruited following the Gentoo UK
conference at &lt;abbr title="University College London"&gt;UCL&lt;/abbr&gt;, and we met a spectacular
contract hire at the one prior to that as well.&lt;/p&gt;
&lt;p&gt;I’ve even been lucky enough to have a few doors held open for me via people I’ve
met at Gentoo-themed or Gentoo-heavy events, and I suspect I’d be writing this
from a less happy place without them.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="wrapping-up"&gt;
&lt;h2&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;It is true that you really can not always see the forest for trees.&lt;/p&gt;
&lt;p&gt;Had recent events not clouded my vision I would have commented on the train
wreck that is &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;webapp.eclass&lt;/span&gt;&lt;/code&gt; and &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;app-admin/webapp-config&lt;/span&gt;&lt;/code&gt; in
&lt;span class="xref std std-doc"&gt;dropping_gentoo&lt;/span&gt;.  It sucked tonnes and tonnes of time away until we
eventually just trashed any package that interacted with it and moved on.&lt;/p&gt;
&lt;p&gt;That was so long ago that I had forgotten about it until a co-worker asked me
why I hadn’t mentioned it.  I suspect most of the other negative comments I made
will feel equally inconsequential when compared to the benefits Gentoo gave us
as time moves on.&lt;/p&gt;
&lt;p&gt;Instead of making this rant even longer, I’ll take the time to reflect on the
fun memories.&lt;/p&gt;
&lt;p class="rubric"&gt;Footnotes&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="id2"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="#id1"&gt;*&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;To be fair &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.tbz2&lt;/span&gt;&lt;/code&gt; files on Gentoo are just tarballs with a binary
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;xpak&lt;/span&gt;&lt;/code&gt; appended.  Those extra bits beyond “just a tar -C” are what
makes dependency handling work among other things.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl class="std option"&gt;
&lt;dt class="sig sig-object std" id="cmdoption-tar-C"&gt;
&lt;span id="cmdoption-tar-c"&gt;&lt;/span&gt;&lt;span class="sig-name descname"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt;&lt;/span&gt;&lt;span class="sig-prename descclassname"&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;This option tells &lt;strong class="command"&gt;tar&lt;/strong&gt; to change directory before performing its
duty.  For example using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt; &lt;span class="pre"&gt;/&lt;/span&gt;&lt;/code&gt; will switch to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;/&lt;/span&gt;&lt;/code&gt;, and can be used to
unpack a tarball directly over the root filesystem.&lt;/p&gt;
&lt;/dd&gt;&lt;/dl&gt;

&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/dropping_gentoo_reflex.html" rel="alternate"/>
    <summary>After hitting the publish button on dropping_gentoo a few friends
commented that I was either unnecessarily harsh about Gentoo or we wasted an
enormous amount of time on it.  It definitely was the former, and I feel
a touch ashamed for implying the latter.</summary>
    <category term="gentoo" label="gentoo"/>
    <category term="work" label="work"/>
    <category term="linux" label="linux"/>
    <published>2014-06-29T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/thoughts/brexit_through_the_gift_shop.html</id>
    <title>brexit through the gift shop</title>
    <updated>2018-06-08T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="brexit-through-the-gift-shop"&gt;

&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This is a public letter to my co-workers, which probably shouldn’t be
public.&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class="epigraph"&gt;
&lt;div&gt;&lt;p&gt;If there were in the world today any large number of people who desired
their own happiness more than they desired the unhappiness of others, we
could have a paradise in a few years.&lt;/p&gt;
&lt;p class="attribution"&gt;—Bertrand Russell&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;On Monday morning, a friend and co-worker stood up and rage quit.  And I really
do mean rage quit, it even included a short stand up quarrel in the car park.
Obviously, nobody has spoke about &lt;em&gt;anything&lt;/em&gt; else since…&lt;/p&gt;
&lt;section id="background"&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;We used to work in an environment where we could &lt;span class="xref std std-doc"&gt;reject projects&lt;/span&gt; on moral grounds with ease.  In fact, &lt;abbr title="Institutional Review Board"&gt;IRBs&lt;/abbr&gt; exist for that exact reason.  Times were good,
projects were plentiful, and it was just the way things were.&lt;/p&gt;
&lt;p&gt;This is definitely no longer true.  As we continue to rearrange some projects
for their move to the continent, and lose access to many of the future projects
we have prepared for, there has been a significant push back on personal project
choice.&lt;/p&gt;
&lt;p&gt;To some extent it should be expected.  We’ve lost fifteen percent of our
&lt;abbr title="Research and Development"&gt;R&amp;amp;D&lt;/abbr&gt; workforce to the European offices
already, in many ways those of us that remain(for example: &lt;em&gt;me&lt;/em&gt;) are the less
valued employees.  Yes, this is harsh, but it also the reality.  Just because
you don’t like it, doesn’t change the reality.&lt;/p&gt;
&lt;p&gt;So, there are quite a few people further down the ladder who can no longer rely
on the more valued workers to object-in-unity to immoral works.  And there are
a fair few who have only just discovered they were never holding the chips, and
being let go is a real possibility(we’re &lt;em&gt;way&lt;/em&gt; beyond the pool of voluntary
redundancies at this point).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="collective-bargaining"&gt;
&lt;h2&gt;Collective bargaining&lt;/h2&gt;
&lt;p&gt;So, object-in-unity is pretty much dead.  And it has really surprised me quite
how fractious some of the arguments now are.  Given that people are basically
fighting for scraps the gloves have well and truly come off, which I suppose
should be expected.  However, I thought — or at least hoped — we were better
than this.&lt;/p&gt;
&lt;p&gt;With some people, quite rightly, being concerned for their own careers there has
been some real vitriol aimed at the exitter.  I understand their argument; his
rage quit &lt;em&gt;will&lt;/em&gt; mean that project is dead&lt;a class="footnote-reference brackets" href="#s1" id="id1"&gt;1&lt;/a&gt;, and with it the work of the
peripheral workers has gone too.&lt;/p&gt;
&lt;p&gt;It isn’t helped by the fact that it turns out this particular worker is — we’ve
just found out — independently wealthy through the sale of a &lt;span class="xref std std-doc"&gt;side project&lt;/span&gt; about five years ago.  Seemingly, a minority of people believe
it would be okay if someone’s morals put them in the poor house, but less
so if they have a cushion to soften the blow.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="whats-coming-next"&gt;
&lt;h2&gt;Whats coming next?&lt;/h2&gt;
&lt;blockquote class="epigraph"&gt;
&lt;div&gt;&lt;p&gt;Lisa is a sellout! Lisa is a sellout! Lisa, what’s a sellout?&lt;/p&gt;
&lt;p class="attribution"&gt;—Ralph Wiggum&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Clearly this is going to continue for the foreseeable future.  There are a few
of us who, to put it frankly, are basically on gardening leave while this mess
is being sorted out.  The outcome is either you’ll find yourself doing different
work in a years time, or you’ll be made redundant.  It could be much, &lt;em&gt;much&lt;/em&gt;
worse.&lt;/p&gt;
&lt;p&gt;I, for one, haven’t had a tier-one project since August 2016, haven’t published
a notable work since October 2017, and have only been cited once this year.  If
anybody understands the feeling that your career is dead, then surely it is me.
However, now is not the time to be turning on your co-workers(and in many cases
close friends).&lt;/p&gt;
&lt;p&gt;My career is over in its current form, my future is close to non-existent at
this point, and I mourn what now feels like a wasted fifteen years of my life.
Not one of those things would be less true if somebody was now grinding on
projects that they believed to be reprehensible.  In fact, they’d remain true
and I’d feel far worse for having to live with the damage I’m doing to that
person.&lt;/p&gt;
&lt;p&gt;Please, I beg of you, consider the outcome we’ve seen in some other cases over
the past few months.  Nobody you deal with is happy with this, we’re just doing
what can to get through it as best we know how.&lt;/p&gt;
&lt;p class="rubric"&gt;Footnotes&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="s1"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Yes, that is a terrible bus-factor problem.  The powers that be
&lt;em&gt;should&lt;/em&gt; have seen it coming, but probably missed the point where the
other people with the necessary skills have been moved to Germany.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/thoughts/brexit_through_the_gift_shop.html" rel="alternate"/>
    <summary>This is a public letter to my co-workers, which probably shouldn’t be
public.</summary>
    <category term="work" label="work"/>
    <category term="politics" label="politics"/>
    <published>2018-06-08T00:00:00+01:00</published>
  </entry>
</feed>
