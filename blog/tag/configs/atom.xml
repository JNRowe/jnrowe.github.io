<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://jnrowe.github.io/</id>
  <title>JNRowe - Posts tagged configs</title>
  <updated>2007-03-05T00:00:00+00:00</updated>
  <link href="https://jnrowe.github.io/"/>
  <link href="https://jnrowe.github.io/blog/tag/configs/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.23">ABlog</generator>
  <subtitle>Ramblings of a tired mind</subtitle>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/emacs_gtk_shortcuts.html</id>
    <title>Proper keyboard shortcuts in GTK+</title>
    <updated>2007-03-05T00:00:00+00:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="proper-keyboard-shortcuts-in-gtk"&gt;

&lt;p&gt;If you’re used to the old style &lt;a class="reference external" href="http://www.gtk.org/"&gt;GTK+&lt;/a&gt; keyboard shortcuts, and find yourself
continually closing windows when you’re trying to delete a word (like me) then
add the following to your &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc-2.0&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gtk-key-theme-name = &amp;quot;Emacs&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This is for people using GTK+ apps, not GNOME.  If you wish to change
bindings in GNOME you should use the control centre.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Using the above you can return to the old default format, but if you only want
to enable &lt;kbd class="kbd compound docutils literal notranslate"&gt;&lt;kbd class="kbd docutils literal notranslate"&gt;&amp;lt;C&lt;/kbd&gt;-&lt;kbd class="kbd docutils literal notranslate"&gt;w&amp;gt;&lt;/kbd&gt;&lt;/kbd&gt; and keep the other Windows-style shortcuts you can just
add:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;binding &amp;quot;gtk-emacs-text-entry&amp;quot;
{
    bind &amp;quot;&amp;lt;ctrl&amp;gt;w&amp;quot; { &amp;quot;delete-from-cursor&amp;quot; (word-ends, -1) }
}
class &amp;quot;GtkEntry&amp;quot; binding &amp;quot;gtk-emacs-text-entry&amp;quot;
class &amp;quot;GtkTextView&amp;quot; binding &amp;quot;gtk-emacs-text-entry&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you use &lt;a class="reference external" href="http://plasmasturm.org/code/gtk-chtheme/"&gt;gtk-chtheme&lt;/a&gt; or &lt;a class="reference external" href="http://www.muhri.net/nav.php3?node=gts"&gt;gtk-theme-switch&lt;/a&gt; you should add custom options to
your &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc.mine&lt;/span&gt;&lt;/code&gt; so it isn’t overwritten when you change themes.  See
the comments in your &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc-2.0&lt;/span&gt;&lt;/code&gt; if you use either of these theme
switchers.&lt;/p&gt;
&lt;figure class="align-default"&gt;
&lt;img alt="XFce4 keyboard settings window" src="../../_images/xfce4_keyboard.png" /&gt;
&lt;/figure&gt;
&lt;p&gt;If you’re an &lt;a class="reference external" href="http://www.xfce.org/"&gt;XFce&lt;/a&gt; user you can select the Emacs keyboard shortcuts using the
keyboard settings dialog.&lt;/p&gt;
&lt;p&gt;If you can’t change the settings for some reason, then you can still use
a shortcut to delete words.  The default setting, up to at least GTK+ v2.10.9,
is the finger-stretching &lt;kbd class="kbd compound docutils literal notranslate"&gt;&lt;kbd class="kbd docutils literal notranslate"&gt;&amp;lt;C&lt;/kbd&gt;-&lt;kbd class="kbd docutils literal notranslate"&gt;backspace&amp;gt;&lt;/kbd&gt;&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;And finally, if you manage to convince upstream that the default behaviour
should be the settings in the Emacs theme I’ll owe you a few beers!&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/emacs_gtk_shortcuts.html" rel="alternate"/>
    <summary>If you’re used to the old style GTK+ keyboard shortcuts, and find yourself
continually closing windows when you’re trying to delete a word (like me) then
add the following to your ~/.gtkrc-2.0:</summary>
    <category term="software" label="software"/>
    <category term="configs" label="configs"/>
    <category term="GTK+" label="GTK+"/>
    <category term="emacs" label="emacs"/>
    <published>2007-03-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/mutt_config_snippets.html</id>
    <title>mutt configuration snippets</title>
    <updated>2007-03-05T00:00:00+00:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="mutt-configuration-snippets"&gt;

&lt;p&gt;&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; is my favourite &lt;abbr title="Mail User Agent"&gt;MUA&lt;/abbr&gt;, one of the few tools
I truly believe I couldn’t manage without.  It is also one of those tools,
along with &lt;a class="reference external" href="http://www.vim.org/"&gt;vim&lt;/a&gt;, which can end up sucking away all your free time to configure
it just how you want.&lt;/p&gt;
&lt;p&gt;To get a quick idea of how many options you can configure with &lt;strong class="command"&gt;mutt&lt;/strong&gt;
run &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;mutt&lt;/span&gt; &lt;span class="pre"&gt;-D&lt;/span&gt; &lt;span class="pre"&gt;|&lt;/span&gt; &lt;span class="pre"&gt;wc&lt;/span&gt; &lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/code&gt;, on my system with a heavily patched &lt;strong class="command"&gt;mutt&lt;/strong&gt;
1.5.13 it dumps just over 300 lines of output.  Of course, you shouldn’t need
to edit all of those settings though.&lt;/p&gt;
&lt;p&gt;With the possibility of such large configuration files segregation is
important, and to aid that &lt;strong class="command"&gt;mutt&lt;/strong&gt; supports config file inclusion.  My
own &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.muttrc&lt;/span&gt;&lt;/code&gt; takes advantage of this and consists of just the
following:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source ~/.mutt/boolean.rc
source ~/.mutt/colour.rc
source ~/.mutt/format.rc
source ~/.mutt/keys.rc
source ~/.mutt/misc.rc
source ~/.mutt/quad.rc
source ~/.mutt/folders.rc
source ~/.mutt/autoview.rc
source ~/.mutt/gpg.rc
source ~/.mutt/score.rc

push &amp;lt;show-version&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The main config file simply includes all my other config files, and finally
displays the &lt;strong class="command"&gt;mutt&lt;/strong&gt; version number in the status line.  If you go down
this route, and I recommend it, just keep in mind that &lt;strong class="command"&gt;mutt&lt;/strong&gt;
processes the files in order so you can’t use variables that are defined in
later files.  The other thing to bear in mind while debugging is that
&lt;strong class="command"&gt;mutt&lt;/strong&gt; will be using the &lt;em&gt;last&lt;/em&gt; set option, so if you try to set the
same variable in &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;boolean.rc&lt;/span&gt;&lt;/code&gt; and &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;gpg.rc&lt;/span&gt;&lt;/code&gt; &lt;strong class="command"&gt;mutt&lt;/strong&gt; will
override the value from &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;boolean.rc&lt;/span&gt;&lt;/code&gt; when it reads &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gpg.rc&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first config file to contain anything unusual is &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;colour.rc&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Match URLs in mail
color body blue default &amp;quot;(finger|ftp|hg|http(|s)|news|tel)://[^ ]*&amp;quot;
color body yellow black &amp;quot;mailto:[-a-z_0-9.]+@[-a-z_0-9.]+&amp;quot;
# Match dates, both ISO-style and [YY]YY/MM/DD
color body brightred black &amp;quot;\(19|20\)?[0-9][0-9][/-][01]?[0-9][/-][0123]?[0-9]&amp;quot;

# Highlight qsf and SpamAssassin flagged mail
color index brightred brightblack &amp;quot;~h &amp;#39;^X-Spam: YES&amp;#39;&amp;quot;
color index brightmagenta brightblack &amp;quot;~h &amp;#39;^X-Spam-Status: Yes&amp;#39;&amp;quot;

# ISBNs
color body yellow default &amp;quot;[-0-9]{9,12}[0-9X]&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;keys.rc&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Read mail using text-to-speech engine
macro pager + &amp;quot;|festival --tts\r&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;misc.rc&lt;/span&gt;&lt;/code&gt; you can find:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Fetch the spam rating as defined by qsf and SpamAssassin
spam &amp;quot;X-Spam-Status: Yes, hits=([0-9]+.[0-9]*)&amp;quot; &amp;quot;Spam [%1]&amp;quot;
spam &amp;quot;X-Spam-Rating: ([7-9][0-9]+)&amp;quot; &amp;quot;Spam [%1]&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can then display the ratings in the &lt;strong class="command"&gt;mutt&lt;/strong&gt; index by using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;%H&lt;/span&gt;&lt;/code&gt;
in your &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;index_format&lt;/span&gt;&lt;/code&gt; string.  I personally choose to display the spam
rating instead of the date if it is found:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set index_format=&amp;quot;%Z %2N %?H?%-12.12H&amp;amp;%D? %-16.16F  %s&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The important bit there is &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;%?H?%-12.12H&amp;amp;%D?&lt;/span&gt;&lt;/code&gt; which displays twelve
characters of the spam value if it is found, or failing that the date.  The
reason we display exactly 12 characters of the spam value is so that the
columns line up correctly regardless of whether we display a date or a spam
value.  An example can be seen on the right featuring a few snippets from a ham
mailbox and my spam mailbox:&lt;/p&gt;
&lt;figure class="align-default"&gt;
&lt;img alt="Spam field alignment in :command:`mutt`" src="../../_images/mutt_spam.png" /&gt;
&lt;/figure&gt;
&lt;p&gt;The final, and perhaps most interesting, file is &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;score.rc&lt;/span&gt;&lt;/code&gt; where
I define all my manual scoring and some per-mail colouring policies.&lt;/p&gt;
&lt;p&gt;The first thing we need to understand is that &lt;strong class="command"&gt;mutt&lt;/strong&gt; accumulates
scoring and colouring over its run time.  If you set a scoring policy of +20
for all mail from a certain domain each time you enter a folder 20 will be
added to the score of any mail from that domain.  If you leave &lt;strong class="command"&gt;mutt&lt;/strong&gt;
running for a long time this can easily end up skewing the displayed score.
The solution is simple, we tell &lt;strong class="command"&gt;mutt&lt;/strong&gt; to re-source the score file and
clear the settings every time we change folders:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Reread this file on every folder change
folder-hook . source ~/.mutt/score.rc
unscore *
uncolor index *
# Read our global colours again
source ~/.mutt/colour.rc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we are free to setup our scoring policies without needing to worry about
whether a score will be calculated twice.  We can also set up per-folder
colouring much easier this way.&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Score mail to me, basically any mail which matches a value in
# $alternates
score ~p 40

# Color UKFSN status mail, this way we can highlight the status
# messages in the users mailing list and we don’t need to subscribe
# to the specific status list.
folder-hook UKFSN-users color index brightred black ~hX-Status-Mail:

# Gentoo stuff
# Color resolved Bugzilla bug mail
folder-hook Gentoo-bugs color index brightred black ~hX-Resolved:
# Watch for comments from Seemant in the bugstream
folder-hook Gentoo-bugs &amp;#39;color index brightyellow default ~fseemant@gentoo\.org&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong class="command"&gt;mutt&lt;/strong&gt; allows you to search the entire message using the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~b&lt;/span&gt;&lt;/code&gt;
qualifier, but it can take an incredible amount of time to scan a large mailbox
if you use full body searches.  If you need to search in the mail body on
a routine basis it is better to add custom headers to your mail during
processing with your &lt;abbr title="Mail Delivery Agent"&gt;MDA&lt;/abbr&gt;, and then trigger rules based on those headers.&lt;/p&gt;
&lt;p&gt;The Gentoo-bugs folder examples above use this method, because unfortunately
&lt;a class="reference external" href="http://www.bugzilla.org/"&gt;Bugzilla&lt;/a&gt; doesn’t give us anything else to work with.  I add a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;X-Resolved&lt;/span&gt;&lt;/code&gt;
header if the mail contains &lt;code class="regexp docutils literal notranslate"&gt;&lt;span class="pre"&gt;^&lt;/span&gt; &lt;span class="pre"&gt;+Status|[^|]+|RESOLVED$&lt;/span&gt;&lt;/code&gt;.  And I set
the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;From&lt;/span&gt;&lt;/code&gt; header with the address taken from the first line that matches
&lt;code class="regexp docutils literal notranslate"&gt;&lt;span class="pre"&gt;^-{7}&lt;/span&gt; &lt;span class="pre"&gt;Comment&lt;/span&gt; &lt;span class="pre"&gt;#&lt;/span&gt;&lt;/code&gt;, or &lt;code class="regexp docutils literal notranslate"&gt;&lt;span class="pre"&gt;^&lt;/span&gt; &lt;span class="pre"&gt;{8}ReportedBy:&lt;/span&gt;&lt;/code&gt;.  Those two &lt;abbr title="Regular Expression"&gt;RegEx&lt;/abbr&gt;
catch every Gentoo Bugzilla mail I’ve come across, except external bug state
changes which are left unchanged on purpose for easy highlighting.  I use
a non-public &lt;abbr title="Mail Delivery Agent"&gt;MDA&lt;/abbr&gt; system, so the actual rules aren’t very useful.&lt;/p&gt;
&lt;p&gt;You can use any of the search attributes &lt;strong class="command"&gt;mutt&lt;/strong&gt; defines to set up
scores or colouring.  For example, you could set all mail older than 1 week to
a dull grey by matching on &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~d&amp;gt;1w&lt;/span&gt;&lt;/code&gt; as in:&lt;/p&gt;
&lt;div class="highlight-text notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;folder-hook Gentoo-bugs &amp;#39;color index brightblack default &amp;#39;~d&amp;gt;1w&amp;#39;&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There are a lot of possibilities with &lt;strong class="command"&gt;mutt&lt;/strong&gt;, and there is a lot of
in-depth documentation included in the package.  If your distribution doesn’t
include it you can always head along to the &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; website and read it there.
Happy &lt;strong class="command"&gt;mutt&lt;/strong&gt;’ing.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/mutt_config_snippets.html" rel="alternate"/>
    <summary>mutt is my favourite MUA, one of the few tools
I truly believe I couldn’t manage without.  It is also one of those tools,
along with vim, which can end up sucking away all your free time to configure
it just how you want.</summary>
    <category term="software" label="software"/>
    <category term="configs" label="configs"/>
    <category term="mutt" label="mutt"/>
    <published>2007-03-05T00:00:00+00:00</published>
  </entry>
</feed>
