<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://jnrowe.github.io/</id>
  <title>JNRowe - Posts tagged styling</title>
  <updated>2022-03-11T11:45:58.246571+00:00</updated>
  <link href="https://jnrowe.github.io/"/>
  <link href="https://jnrowe.github.io/blog/tag/styling/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.23">ABlog</generator>
  <subtitle>Ramblings of a tired mind</subtitle>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/Theming_mutt.html</id>
    <title>Theming mutt</title>
    <updated>2009-09-23T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="theming-mutt"&gt;

&lt;p&gt;Jeff, a work colleague, asks via &lt;abbr title="Internet Relay Chat"&gt;IRC&lt;/abbr&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Can I make &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; use a blue statusbar in X and red in console? A different
colour would make it easier to read with a transparent urxvt.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; has access to environment variables when reading its configurations files,
so setting the theme based on term type is extremely easy.&lt;/p&gt;
&lt;p&gt;First separate all your common settings in to one file, say
&lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.mutt/colour_defaults.rc&lt;/span&gt;&lt;/code&gt;.  Then add your per-term settings to a file
named &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.mutt/colour_$TERM.rc&lt;/span&gt;&lt;/code&gt;.  Telling mutt to use the correct theme is
now as simple as adding the following to your &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.muttrc&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-sh notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.mutt/colour_defaults.rc
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.mutt/colour_&lt;span class="nv"&gt;$TERM&lt;/span&gt;.rc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/Theming_mutt.html" rel="alternate"/>
    <summary>Jeff, a work colleague, asks via IRC:</summary>
    <category term="mutt" label="mutt"/>
    <category term="styling" label="styling"/>
    <published>2009-09-23T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/Uber_pink_prompts.html</id>
    <title>Uber pink prompts</title>
    <updated>2009-09-25T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="uber-pink-prompts"&gt;

&lt;p&gt;cookiemon5ter asks in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;#gentoo&lt;/span&gt;&lt;/code&gt; on Freenode:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;anyone know where to get a list of color codes for &lt;strong class="command"&gt;bash&lt;/strong&gt; or know
the code for pink :p&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;My first suggestion was to look at &lt;a class="reference external" href="http://kerneltrap.org/man/linux/man4/console_codes.4"&gt;console_codes(4)&lt;/a&gt; for the escapes, and note
that pink isn’t defined.  As a workaround I suggested changing the console
palette using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;echo&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;\e]PDff1493&amp;quot;&lt;/span&gt;&lt;/code&gt; which will make the normal magenta escape
in to a much deeper pink.  The syntax to change the console colour palette is
&lt;code class="samp docutils literal notranslate"&gt;&lt;span class="pre"&gt;eP[&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;colour_number&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;red&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;green&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;blue&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;]&lt;/span&gt;&lt;/code&gt;, so deconstructing the
above example we are setting colour code &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;D&lt;/span&gt;&lt;/code&gt; (or 13) to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;#ff1493&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the idea cookiemon5ter had wasn’t to change the palette but just to use
a nice pink in the &lt;a class="reference external" href="http://cnswww.cns.cwru.edu/~chet/bash/bashtop.html"&gt;bash&lt;/a&gt; prompt under &lt;a class="reference external" href="http://materm.sourceforge.net/"&gt;mrxvt&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;i was just talking [about] editing the line in bashrc&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Using &lt;strong class="command"&gt;mrxvt&lt;/strong&gt;, or any other terminal that supports the &lt;a class="reference external" href="https://invisible-island.net/xterm/"&gt;xterm&lt;/a&gt;’s 256
colour mode, we can actually pick a variety of pinks to use directly without
having to redefine the palette.  The prompt with a more gaudy pink can be
achieved with the following:&lt;/p&gt;
&lt;div class="highlight-bash notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\[\e[01;33m\]\u@\h\[\e[38;5;199m\] \w\$\[\e[00m\] &amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The important change here is the use of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;\e[38;5;199m&lt;/span&gt;&lt;/code&gt;, which tells mrxvt to
select colour 199 from its extended 256 colour range.  Colours 196 through 201
are varying levels of pink.  To see a quick table of the full colour range you
can use the following little loop:&lt;/p&gt;
&lt;div class="highlight-bash notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;..15&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; j in &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;..15&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nv"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;i*16+j&lt;span class="k"&gt;))&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\e[38;5;%im %03i&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$col&lt;/span&gt; &lt;span class="nv"&gt;$col&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="xterm's 256 colour palette" src="../../_images/2009-09-25-256_colours.png" /&gt;
&lt;p&gt;There is one other important point to make here, you must set the prompt based
on terminal type now as some terminals and the console won’t recognise the
sequences correctly.  Test the terminal type by checking &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;code class="xref std std-envvar docutils literal notranslate"&gt;&lt;span class="pre"&gt;$TERM&lt;/span&gt;&lt;/code&gt; in
your startup scripts, or if you’re convinced all your terminals are 256 colour
capable you can simply check for &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;code class="xref std std-envvar docutils literal notranslate"&gt;&lt;span class="pre"&gt;$DISPLAY&lt;/span&gt;&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;Changing the console palette and using 256 colour mode makes for two tips
today!!&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/Uber_pink_prompts.html" rel="alternate"/>
    <summary>cookiemon5ter asks in #gentoo on Freenode:</summary>
    <category term="bash" label="bash"/>
    <category term="styling" label="styling"/>
    <published>2009-09-25T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/Fancy_awesome_theming.html</id>
    <title>Fancy awesome theming</title>
    <updated>2009-09-28T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="fancy-awesome-theming"&gt;

&lt;a class="reference external image-reference" href="/.images/2009-09-28-awesome_theming.png"&gt;&lt;img alt="Awesome screenshot" class="align-right" src="../../_images/2009-09-28-awesome_theming-mini.png" /&gt;&lt;/a&gt;
&lt;p&gt;People, mostly named Neil Blake, who shouldn’t look over my shoulder ask:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;How do you make &lt;a class="reference external" href="https://awesomewm.org/"&gt;awesome&lt;/a&gt; use &lt;em&gt;purdy&lt;/em&gt; pixmap backgrounds for the &lt;a class="reference external" href="https://awesomewm.org/apidoc/libraries/awful.wibox.html"&gt;wibox&lt;/a&gt;?&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Simple answer today; cheat.&lt;/p&gt;
&lt;p&gt;As you can see in the screenshot on the right my wibox appears to be using the
same fancy pixmap background as the &lt;a class="reference external" href="http://www.gtk.org/"&gt;GTK+&lt;/a&gt; theme I’m using.  What is actually
happening is that I’ve pasted a copy of the background pixmap from the expose
theme on top of my wallpaper using &lt;a class="reference external" href="http://www.imagemagick.org/index.php"&gt;ImageMagick&lt;/a&gt;, which is easily achievable on
a netbook without having to fire up the &lt;a class="reference external" href="http://www.gimp.org/"&gt;gimp&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight-sh notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;convert /home/jay/.themes/expose/gtk-2.0/bc.xpm -scale 1024x20! bc.png
composite  -gravity north bc.png backdrop.png backdrop_new.png
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The initial &lt;strong class="command"&gt;convert&lt;/strong&gt; command resizes &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;bc.xpm&lt;/span&gt;&lt;/code&gt; from the expose
theme to 1024x20 pixels, 1024 being the screen width and 20 being the height of
my main wibox in awesome.  We must suffix the &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-scale&lt;/span&gt;&lt;/code&gt; option’s
argument with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;!&lt;/span&gt;&lt;/code&gt; to tell &lt;strong class="command"&gt;convert&lt;/strong&gt; to ignore the image’s aspect
ratio when resizing, without this the command will not produce an image at the
size we expect.&lt;/p&gt;
&lt;p&gt;The second command tells ImageMagick’s &lt;strong class="command"&gt;composite&lt;/strong&gt; that we wish to
paste our newly generated image on top &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;backdrop.png&lt;/span&gt;&lt;/code&gt;, we could specify
any location we want with the &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-gravity&lt;/span&gt;&lt;/code&gt; option but I have my wibox on
the top of the screen so &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;north&lt;/span&gt;&lt;/code&gt; is correct for me.&lt;/p&gt;
&lt;p&gt;With that done we have an image with our normal wallpaper and wibox sized chunk
with our theme’s background.  All we need to do now is tell awesome to make our
wibox transparent and the final result is a wibox that appears to be using the
theme’s background.&lt;/p&gt;
&lt;div class="highlight-moon notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mywibox&lt;/span&gt;&lt;span class="kt"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="kt"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wibox&lt;/span&gt; &lt;span class="nv"&gt;position:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;top&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;fg:&lt;/span&gt; &lt;span class="n"&gt;beautiful&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fg_normal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;bg:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;#00000000&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Colours are specified in the de facto standard format of
&lt;code class="samp docutils literal notranslate"&gt;&lt;span class="pre"&gt;#[&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;red&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;green&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;blue&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;][&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;alpha&lt;/span&gt;&lt;/em&gt;&lt;span class="pre"&gt;]&lt;/span&gt;&lt;/code&gt;, the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;00&lt;/span&gt;&lt;/code&gt; value for alpha in the
above example means we want a fully transparent theme background.  You could
include some colour values and varying levels of alpha transparency to tint the
background image, however that could also be achieved with ImageMagick when
building the background image if it is desired.&lt;/p&gt;
&lt;p&gt;Click on the thumbnail image above to see the full desktop image and the effect
in full.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/Fancy_awesome_theming.html" rel="alternate"/>
    <summary>People, mostly named Neil Blake, who shouldn’t look over my shoulder ask:</summary>
    <category term="awesome" label="awesome"/>
    <category term="styling" label="styling"/>
    <published>2009-09-28T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/Disabling_cursor_blinking_in_GTK.html</id>
    <title>Disabling cursor blinking in GTK+</title>
    <updated>2009-10-03T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="disabling-cursor-blinking-in-gtk"&gt;

&lt;p&gt;Darren Roberts asks via the EADS Linux list:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;In &lt;a class="reference external" href="http://pidgin.im/"&gt;pidgin&lt;/a&gt; how can I stop the cursor blinking?&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Since we’ve had our &lt;a class="reference external" href="http://xmpp.org/"&gt;Jabber&lt;/a&gt; server set up at the office there have been
countless questions about using &lt;a class="reference external" href="http://pidgin.im/"&gt;pidgin&lt;/a&gt; to the various lists, and I feel the
answer that should often be given is:  Use something else.  There are plenty of
other clients available; &lt;a class="reference external" href="http://live.gnome.org/Empathy"&gt;empathy&lt;/a&gt; is installed on all our Solaris and Linux
boxes now, &lt;a class="reference external" href="http://developer.imendio.com/projects/gossip"&gt;gossip&lt;/a&gt; may already be installed, &lt;a class="reference external" href="http://emacs-jabber.sourceforge.net/"&gt;emacs-jabber&lt;/a&gt; seems popular with
many of our &lt;a class="reference external" href="http://www.xemacs.org/"&gt;emacs&lt;/a&gt; using developers, &lt;a class="reference external" href="http://www.gajim.org/"&gt;gajim&lt;/a&gt; comes recommended by a few users or
my favourite &lt;a class="reference external" href="http://www.bitlbee.org/"&gt;bitlbee&lt;/a&gt;.  Now, with the rant out of the way we can go back to the
question at hand…&lt;/p&gt;
&lt;p&gt;Cursor blinking is a severe annoyance for some people(not me, I patch apps to
add it), and disabling it for GTK+ applications is really quite simple.   If
you’re a &lt;a class="reference external" href="http://www.gnome.org/"&gt;GNOME&lt;/a&gt; user then the setting to change blinking is in the keyboard
properties dialog that can be found in the system menu.  If you’re using &lt;a class="reference external" href="http://www.kde.org/"&gt;KDE&lt;/a&gt;
you should edit &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc-2.0-kde&lt;/span&gt;&lt;/code&gt;.  If you’re using neither GNOME or KDE
you can add a directive to your &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc-2.0&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-cpp notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If it is just the blinking rate that bugs you, then you can give a different
value for &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gtk-cursor-blink&lt;/span&gt;&lt;/code&gt;.  The value is given in milliseconds for the
blink frequency.&lt;/p&gt;
&lt;p&gt;If you wish to only change the settings in pidgin you can edit
&lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.purple/gtkrc-2.0&lt;/span&gt;&lt;/code&gt; instead of your main &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.gtkrc-2.0&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;section id="bonus-related-tip"&gt;
&lt;h2&gt;Bonus related tip&lt;/h2&gt;
&lt;p&gt;If you’re really driven mad by the blinking cursor, and wish to disable it in
the console too then add the next little snippet to your shell’s startup file:&lt;/p&gt;
&lt;div class="highlight-bash notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;\033[?48c&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/Disabling_cursor_blinking_in_GTK.html" rel="alternate"/>
    <summary>Darren Roberts asks via the EADS Linux list:</summary>
    <category term="GTK+" label="GTK+"/>
    <category term="styling" label="styling"/>
    <published>2009-10-03T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>https://jnrowe.github.io/articles/tips/Sharing_Xresources_between_systems.html</id>
    <title>Sharing Xresources between systems</title>
    <updated>2009-10-05T00:00:00+01:00</updated>
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;section id="sharing-xresources-between-systems"&gt;

&lt;p&gt;In amongst the rants in our watercooler channel at work comes this question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;So then, how do custom settings in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Xresources&lt;/span&gt;&lt;/code&gt; work if you share your
home directory between machines?&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The question arises from a much larger topic concerning keeping your home
directory in a &lt;a class="reference external" href="http://www.git-scm.com/"&gt;git&lt;/a&gt; repository.  The issue Carl is having is that he needs to
use different options on different machines and doesn’t relish the idea of
having to pull and rebase branches just to keep files in sync.  Of course, he
doesn’t have to do that and that is the point of this tip.&lt;/p&gt;
&lt;section id="basic-conditionals"&gt;
&lt;h2&gt;Basic conditionals&lt;/h2&gt;
&lt;p&gt;With great foresight the authors of &lt;a class="reference external" href="http://www.xfree86.org/current/xrdb.1.html"&gt;xrdb&lt;/a&gt; decided that our &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Xresources&lt;/span&gt;&lt;/code&gt; file
should be preprocessed before it is used, the default preprocessor is
&lt;strong class="command"&gt;cpp&lt;/strong&gt;.  On most of our systems at work, and likely most Linux systems
in general, &lt;strong class="command"&gt;cpp&lt;/strong&gt; is &lt;a class="reference external" href="http://gcc.gnu.org/onlinedocs/gcc-4.4.1/cpp/"&gt;GNU cpp&lt;/a&gt;.  Don’t worry about the size of the
manual though, the interesting features are easy to understand and use.  Let’s
look at trimmed example from my configuration file:&lt;/p&gt;
&lt;div class="highlight-c notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef FIXED_FONT&lt;/span&gt;
    &lt;span class="cp"&gt;#define FIXED_FONT xft:Inconsolata:pixelsize=14:antialias=false&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#ifndef BOLD_FIXED_FONT&lt;/span&gt;
    &lt;span class="cp"&gt;#define BOLD_FIXED_FONT FIXED_FONT:bold&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="n"&gt;urxvt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FIXED_FONT&lt;/span&gt;
&lt;span class="n"&gt;urxvt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;boldFont&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BOLD_FIXED_FONT&lt;/span&gt;

&lt;span class="n"&gt;irssi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FIXED_FONT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This small snippet sets a couple of default fonts that we can reference
throughout our resource file as &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FIXED_FONT&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;BOLD_FIXED_FONT&lt;/span&gt;&lt;/code&gt;.  This
way we can easily change the value in one place and it trickles down to all our
programs.  Or we can define different options at runtime by specifying values
to &lt;strong class="command"&gt;xrdb&lt;/strong&gt;, such as &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;xrdb&lt;/span&gt; &lt;span class="pre"&gt;-DFIXED_FONT=xft:Monospace:pixelsize=10&lt;/span&gt;&lt;/code&gt;.
And don’t worry, &lt;strong class="command"&gt;cpp&lt;/strong&gt; is smart enough to cope with the use &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;=&lt;/span&gt;&lt;/code&gt; in
our definition.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="per-system-conditionals"&gt;
&lt;h2&gt;Per system conditionals&lt;/h2&gt;
&lt;p&gt;On one system I use &lt;a class="reference external" href="http://www.levien.com/type/myfonts/inconsolata.html"&gt;Inconsolata&lt;/a&gt; is not installed, so the configuration above
wouldn’t work on it.  &lt;strong class="command"&gt;xrdb&lt;/strong&gt; gives us a way around the problem though,
it defines a set of symbols we can use including one to test the system’s
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;hostname&lt;/span&gt;&lt;/code&gt;.  &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;nebula&lt;/span&gt;&lt;/code&gt;, the system that doesn’t have Inconsolata, does have
&lt;a class="reference external" href="http://www.is-vn.bg/hamster/"&gt;terminus&lt;/a&gt; and I can use that on there with a couple of small changes.&lt;/p&gt;
&lt;div class="highlight-c notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef FIXED_FONT&lt;/span&gt;
    &lt;span class="cp"&gt;#ifdef SRVR_nebula&lt;/span&gt;
        &lt;span class="cp"&gt;#define FIXED_FONT xft:Terminus:pixelsize=14:antialias=false&lt;/span&gt;
    &lt;span class="cp"&gt;#else&lt;/span&gt;
        &lt;span class="cp"&gt;#define FIXED_FONT xft:Inconsolata:pixelsize=14:antialias=false&lt;/span&gt;
    &lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;As we’re using &lt;a class="reference external" href="http://xorg.freedesktop.org/"&gt;X11&lt;/a&gt;’s &lt;strong class="command"&gt;xrdb&lt;/strong&gt; it is network aware, it defines
&lt;code class="samp docutils literal notranslate"&gt;&lt;span class="pre"&gt;SRVR_&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;name&lt;/span&gt;&lt;/em&gt;&lt;/code&gt; for the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;X&lt;/span&gt;&lt;/code&gt; server name and &lt;code class="samp docutils literal notranslate"&gt;&lt;span class="pre"&gt;CLNT_&lt;/span&gt;&lt;em&gt;&lt;span class="pre"&gt;name&lt;/span&gt;&lt;/em&gt;&lt;/code&gt; for the
client name.  Using these it is easy to configure systems where the server
and clients are on different machines.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="conditionals-for-server-options"&gt;
&lt;h2&gt;Conditionals for server options&lt;/h2&gt;
&lt;p&gt;You can also change configured settings based on the extensions loaded in to the
server, for example to disable the screensaver in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;muxi&lt;/span&gt;&lt;/code&gt; if the &lt;abbr title="Display Power Management Signalling"&gt;DPMS&lt;/abbr&gt; extension is supported we’d test for
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;EXT_DPMS&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-c notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifdef EXT_DPMS&lt;/span&gt;
    &lt;span class="n"&gt;muxi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;screensaver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="testing-your-resource-files"&gt;
&lt;h2&gt;Testing your resource files&lt;/h2&gt;
&lt;p&gt;When you’re testing your own &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.Xresources&lt;/span&gt;&lt;/code&gt; file you can use the
&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-n&lt;/span&gt;&lt;/code&gt; option with &lt;strong class="command"&gt;xrdb&lt;/strong&gt;, it tells &lt;strong class="command"&gt;xrdb&lt;/strong&gt; to dump the
settings as they would be used instead of updating the resource database.  This
makes it easy to check if our conditional statements are working correctly
without having to open and close applications constantly.  You can also define
and cancel symbol definitions with the &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-D&lt;/span&gt;&lt;/code&gt; and &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-U&lt;/span&gt;&lt;/code&gt; options
for &lt;strong class="command"&gt;xrdb&lt;/strong&gt;, this allows you to test your modifications that rely on
symbols that are normally exported by &lt;strong class="command"&gt;xrdb&lt;/strong&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="using-a-more-featureful-preprocessor"&gt;
&lt;h2&gt;Using a more featureful preprocessor&lt;/h2&gt;
&lt;p&gt;You can also choose a different preprocessor if &lt;strong class="command"&gt;cpp&lt;/strong&gt; isn’t up to your
needs by specifying a &lt;strong class="command"&gt;-cpp&lt;/strong&gt; option to &lt;strong class="command"&gt;xrdb&lt;/strong&gt;.  The only
caveat is that must accept &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-D&lt;/span&gt;&lt;/code&gt; for defines, &lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-U&lt;/span&gt;&lt;/code&gt; for symbol
cancelling and &lt;a class="reference external" href="https://docs.python.org/3/using/cmdline.html#cmdoption-I" title="(in Python v3.9)"&gt;&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-I&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for include paths.  An example that does fit these
restrictions is &lt;a class="reference external" href="http://www.gnu.org/software/m4/m4.html"&gt;m4&lt;/a&gt;, and it might be a good choice if you wish to do more
advanced things in your configuration file such as fancy filtering or the use
of loops for defining colour tables.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://jnrowe.github.io/articles/tips/Sharing_Xresources_between_systems.html" rel="alternate"/>
    <summary>In amongst the rants in our watercooler channel at work comes this question:</summary>
    <category term="X11" label="X11"/>
    <category term="styling" label="styling"/>
    <published>2009-10-05T00:00:00+01:00</published>
  </entry>
</feed>
